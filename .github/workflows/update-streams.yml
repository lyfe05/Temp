import glob

def generate_m3u8_files(matches_with_channels):
    """Generate M3U8 files for each match - clean up old files first"""
    os.makedirs('streams', exist_ok=True)
    
    # Delete all existing .m3u8 files in streams directory
    existing_files = glob.glob('streams/*.m3u8')
    for file_path in existing_files:
        try:
            os.remove(file_path)
            print(f"🗑️  Deleted: {file_path}")
        except Exception as e:
            print(f"⚠️  Could not delete {file_path}: {e}")
    
    files_created = 0
    
    for match in matches_with_channels:
        match_name = match['name']
        channels = match['channels']
        safe_name = create_safe_filename(match_name)
        
        if len(channels) == 1:
            # Single channel - create one file
            filename = f"streams/{safe_name}.m3u8"
            create_m3u8_file(filename, channels[0]['cmd'])
            print(f"   📄 Created: {filename}")
            files_created += 1
        else:
            # Multiple channels - create multiple files
            for i, channel in enumerate(channels, 1):
                if i == 1:
                    filename = f"streams/{safe_name}.m3u8"
                else:
                    filename = f"streams/{safe_name}_{i}.m3u8"
                
                create_m3u8_file(filename, channel['cmd'])
                print(f"   📄 Created: {filename}")
                files_created += 1
    
    return files_created
